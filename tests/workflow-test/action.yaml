name: Publish NuGet workflow uses devcontainer and publishes packages
description: Test to validate that publish NuGet workflow uses devcontainer and publishes packages

runs:
  using: composite
  steps:
    - name: Initialize test
      shell: bash
      run: |
        source ${{ github.workspace }}/tests/test-reporter.sh
        initialize_test "Publish NuGet workflow uses devcontainer and publishes packages" "workflow-test"

    - name: Prepare test environment
      shell: bash
      run: |
        mkdir -p "${{ github.workspace }}/tests/workflow-test/logs"

        # Back up existing .devcontainer
        if [ -d "${{ github.workspace }}/.devcontainer" ]; then
          mv "${{ github.workspace }}/.devcontainer" "${{ github.workspace }}/.devcontainer.bak"
        fi
        
        # Copy our test .devcontainer to the root
        cp -r "${{ github.workspace }}/tests/workflow-test/.devcontainer" "${{ github.workspace }}/"

        # Create and push test container image
        docker build -t localhost:5000/workflow-test-devcontainer:latest \
            -f ${{ github.workspace }}/tests/workflow-test/devcontainer-to-publish/Dockerfile \
            ${{ github.workspace }}/tests/workflow-test/devcontainer-to-publish/

        docker login localhost:5000 -u testuser -p testpassword
        docker push localhost:5000/workflow-test-devcontainer:latest

    - name: Run publish-nuget action
      uses: ./
      with:
        registryHost: localhost:5000
        registryUsername: testuser
        registryPassword: testpassword
        projectFile: tests/workflow-test/TestProject/TestProject.csproj
        version: 1.0.0
        nugetAuthToken: fake-token
        packageRepository: http://localhost:5001/v3/index.json

    - name: Assert custom devcontainer was used
      shell: bash
      if: always()
      run: |
        source ${{ github.workspace }}/tests/test-reporter.sh
        set_test_name "Assert custom devcontainer was used"

        log_file="${{ github.workspace }}/tests/workflow-test/logs/devcontainer.log"
        
        if [ -f "$log_file" ]; then
            if grep -q "CUSTOM_DEVCONTAINER: workflow-test-container" "$log_file"; then
                success "Custom devcontainer was used"
            else
                failure "Custom devcontainer marker not found in logs"
            fi
            cat "$log_file"
        else
            failure "Devcontainer log file not found"
            ls -la "${{ github.workspace }}/tests/workflow-test/logs/"
        fi

    - name: Assert NuGet package was published
      shell: bash
      if: always()
      run: |
        source ${{ github.workspace }}/tests/test-reporter.sh
        set_test_name "Assert NuGet package was published"
        
        # Wait for server to index packages
        sleep 5

        # Query the NuGet server API to check if the package exists
        response=$(curl -s "http://localhost:5001/v3/package/TestProject/1.0.0" -o /dev/null -w "%{http_code}")
        
        if [ "$response" -eq 200 ]; then
            success "NuGet package was published successfully"
        else
            failure "NuGet package was not found on the server (HTTP $response)"
            
            # Try to get package list for debugging
            echo "Available packages:"
            curl -s "http://localhost:5001/v3/index.json"
        fi

    - name: Clean up test environment
      shell: bash
      if: always()
      run: |
        # Restore original .devcontainer
        rm -rf "${{ github.workspace }}/.devcontainer"
        if [ -d "${{ github.workspace }}/.devcontainer.bak" ]; then
          mv "${{ github.workspace }}/.devcontainer.bak" "${{ github.workspace }}/.devcontainer"
        fi

    - name: Finalize test
      shell: bash
      if: always()
      run: |
        source ${{ github.workspace }}/tests/test-reporter.sh
        finalize_test
